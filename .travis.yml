# Enable C++ support
language: cpp

stages:
  - prebuild
  - build
  - sanitizers

jobs:
  include:
    - stage: prebuild
      name: "Verify code formating"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/run-clang-format.py -r src test bench"
    - stage: prebuild
      name: "Static analysis"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/tidy"
    - stage: build
      name: "Clang 10"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; COMPILER=clang++ ./build"
    - stage: build
      name: "GCC 10"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/gcc bash -c "cd src; COMPILER=g++ ./build"
    - stage: build
      os: osx
      before_install:
        - brew update
        - brew install ninja
      script: ./build
    - stage: build
      os: windows
      env:
        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
      script:
        - export PATH=$MSBUILD_PATH:$PATH
        - ./build.bat
    - stage: sanitizers
      name: "Address sanitizer"
      sudo: required
      services:
        - docker
      script:
        - docker run --privileged -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/build-asan"
    - stage: sanitizers
      name: "Thread sanitizer"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/build-tsan"
    - stage: sanitizers
      name: "Undefined behavior sanitizer"
      services:
        - docker
      script:
        - docker run -v $(pwd):/src petersonjm1/clang bash -c "cd src; ./tools/build-ubsan"
